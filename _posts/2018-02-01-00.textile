---
layout:     post
title:      "Трюки и хаки при экспериментах с IPCam от Xiong Mai"
tagline:    ""
category:   ""
group:      ipcam
tags:       [hi3518e, ipcam, zftlab]
---


h3. Введение

p. Материал в стадии оформления. Последнее обновление - 2018.02.04

---

h3. Благодарности

p. Данная информация является результатом совместной работы дружной компании на канале "Telegram":http://t.me/joinchat/FhtyHxDpQsv8HlRliQDgqw

* "ESonya":http://www.cctvsp.ru/ - Игорь, г.Сергиев Посад
* "FlyRouter":http://zftlab.org - Игорь, г.Симферополь
* "max380":/ - Максим, г.Екатеринбург
* "Oleg34":https://vk.com/id379460034 - Олег, г.Волгоград

---

h3. Создание полного дампа с Flash устройства (ff, fullflash)

p{color:red}. СТРОГО РЕКОМЕНДУЕТСЯ СДЕЛАТЬ ДАННУЮ МАНИПУЛЯЦИЮ ПЕРЕД ЛЮБЫМИ ЭКСПЕРИМЕНТАМИ !

p. Настройте TFTP сервер и проверьте доступ к нему

p. Выполните в консоли, нажав Ctrl+C для остановки загрузки ядра после подачи питания на модуль

p. Ниже приведен пример создания дампа для 8Mb Flash

pre. #
set serverip 192.168.1.254                     // Устанавка адреса TFTP сервера
sf probe 0                                     // Разрешение доступа к флешке
sf read 0x82000000 0x0 0x800000                // Чтение всей флешки в память
tftp 0x82000000 ff.img 0x800000                // Выгрузка дампа (fullflash) на TFTP сервер

p. Ниже приведен пример создания дампа для 16Mb Flash

pre. #
set serverip 192.168.1.254                     // Устанавка адреса TFTP сервера
sf probe 0                                     // Разрешение доступа к флешке
sf read 0x82000000 0x0 0x1000000               // Чтение всей флешки в память
tftp 0x82000000 ff.img 0x1000000               // Выгрузка дампа (fullflash) на TFTP сервер


---

h3. Обновление из полного дампа устройства (ff, fullflash) через консоль

p. Настройте TFTP сервер и положите на него фаил дампа ff.img

p. Важно !  В результате вы получите полный дубликат устройства с которого сняли дамп !

p. Выполните в консоли, нажав Ctrl+C для остановки загрузки ядра после подачи питания на модуль

p. Ниже приведен пример обновление из полного дампа для 8Mb Flash

pre. #
set serverip 192.168.1.254                     // Устанавка адреса TFTP сервера
sf probe 0                                     // Разрешение доступа к флешке
tftp 0x82000000 ff.img                         // Загрузка в память дампа (fullflash)
sf erase 0x000000000000 0x800000               // Очистка всей флешки под запись
sf write 0x82000000 0x000000000000 0x800000    // Запись дампа (fullflash) из памяти на флешку
reset                                          // Рестарт устройства

p. Ниже приведен пример обновление из полного дампа для 16Mb Flash

pre. #
set serverip 192.168.1.254                     // Устанавка адреса TFTP сервера
sf probe 0                                     // Разрешение доступа к флешке
tftp 0x82000000 ff.img                         // Загрузка в память дампа (fullflash)
sf erase 0x000000000000 0x1000000              // Очистка всей флешки под запись
sf write 0x82000000 0x000000000000 0x1000000   // Запись дампа (fullflash) из памяти на флешку
reset                                          // Рестарт устройства

---

h3. Обновление загрузчика (u-boot bootloader) через консоль

p. Настройте TFTP сервер и положите на него фаил u-boot.bin

p. Важно !  Всегда проверяйте первый байт загрузчика что-бы не получить "кирпич" !

p. Важно !  Крипто-раздел, прикреплённый к загрузчику в данном примере будет уничтожен !

p. Выполните в консоли, нажав Ctrl+C для остановки загрузки ядра после подачи питания на модуль

pre. #
mw.b 0x82000000 0xFF 0x40000                   // Очистка памяти под запись
set serverip 192.168.1.254                     // Устанавка адреса TFTP сервера
tftp 0x82000000 u-boot.bin                     // Загрузка в память загрузчика
sf probe 0                                     // Разрешение доступа к флешке
sf erase 0 0x40000                             // Очистка части флешки под запись
sf write 0x82000000 0 0x40000                  // Запись загрузчика из памяти на флешку
reset                                          // Рестарт устройства

---

h3. Включение отображения процесса загрузки ядра Linux

p. Иногда возникает необходимость, при поиске проблем, отобразить ход загрузки ядра и модулей.

p. Включение режима возможно как в загрузчике, так и в самом Linux, если зайти на устройство по Telnet.

pre. #
armbenv -s xmuart 0                            // Включение отображения загрузки ядра Linux
reboot                                         // Рестарт устройства

p. Выполните в консоли, нажав Ctrl+C для остановки загрузки ядра после подачи питания на модуль

pre. #
setenv xmuart 0                                // Включение отображения загрузки ядра Linux
saveenv                                        // Сохранение изменённых настроек
reset                                          // Рестарт устройства

---

h3. Изменение некоторых системных параметров

p. Команда armbenv позволяет изменять некоторые настройки системы, работая с ENV областью загрузчика.

p. Все переменные можно изменять как непосредственно в Linux, так и в самом загрузчике.

p. Так, например, выполнение *appauto 0* позволяет отключить проверку работы и наличия Sofia в системе.

p. Список переменных можно запросить командой *armbenv -r*. Ниже представлен пример выполнения команды.

pre. #
bootdelay = 1
baudrate = 115200
serverip = 192.168.1.1
ipaddr = 192.168.1.10
netmask = 255.255.255.0
ethaddr = 00:12:21:10:a3:d5
xmuart = 0
NID = 0x0003

---

h3. Очистка раздела ENV (настройки) загрузчика

p{color:red}. ВЫ ДОЛЖНЫ ОТДАВАТЬ СЕБЕ ОТЧЁТ О ПРОДЕЛЫВАЕМЫХ ОПЕРАЦИЯХ !

p. Для вычисления местонаходжения и размера стираемого раздела необходимо смотреть MTD partitions.

|=. Модель и ID камеры     |=. Раздел для чистки  |
| HI3518E_50H10L_S39_06510 | 0x0000007b0000 50000 |

pre. #
sf probe 0                                     // Разрешение доступа к флешке
sf erase 0x0000007b0000 50000                  // Очистка раздела ENV (настроек) загрузчика

---

h3. Загрузка экспериментальной системы для HI3518Ev1

p. Настройте TFTP сервер и положите на него фаил uImage

p. Выполните в консоли, нажав Ctrl+C для остановки загрузки ядра после подачи питания на модуль

pre. #
set serverip 192.168.1.254                     // Устанавка адреса TFTP сервера
tftp 0x82000000 uImage                         // Загрузка в память экспериментальной системы
setenv bootargs mem=40M console=ttyAMA0,115200 // Установка переменных для передачи ядру
bootm 0x82000000                               // Старт системы из памяти

p. После загрузки устройство имеет адрес 192.168.1.15/24. Для изменения выполните команды ниже.

pre. #
vi /etc/network/interfaces                     // Установка сетевых настроек
/etc/init.d/S40network restart                 // Рестарт сетевого интерфейса

p. Пароль для root не установлен. Выполните *passwd root* для необходимости доступа через SSH.

p. RTSP потоки доступны по адресам http://192.168.1.15:554/0 и http://192.168.1.15:554/1

p. Посылая сигнал -SIGUSR1 демону snapshotd можно добиться получения снимков (тестовая функция)

pre. # snapshotd -p /tmp/ -f snap.jpg rtsp://127.0.0.1:554/0        // запуск демона в консоли

p. Альтернативный вариант для получения снапшотов и роликов - использовать утилиту *sample_venc*

---

h3. Внутренние ссылки

<ul>
  {% assign pages_list = site.posts %}
  {% assign group = 'ipcam' %}
  {% include JB/pages_list %}
</ul>

---

h3. Внешние ссылки

* -
